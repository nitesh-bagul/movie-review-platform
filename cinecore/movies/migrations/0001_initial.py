# Generated by Django 5.2.5 on 2025-08-12 10:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('hindi', 'Hindi'), ('tamil', 'Tamil'), ('telugu', 'Telugu'), ('malayalam', 'Malayalam'), ('kannada', 'Kannada'), ('bengali', 'Bengali'), ('marathi', 'Marathi'), ('gujarati', 'Gujarati'), ('punjabi', 'Punjabi'), ('odia', 'Odia'), ('english', 'English'), ('french', 'French'), ('spanish', 'Spanish'), ('german', 'German'), ('japanese', 'Japanese'), ('korean', 'Korean'), ('chinese', 'Chinese'), ('russian', 'Russian')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='person_profiles/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo_image', models.ImageField(blank=True, null=True, upload_to='platform_logos/')),
                ('website_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('short_synopsis', models.CharField(max_length=500)),
                ('full_synopsis', models.TextField()),
                ('release_date', models.DateField()),
                ('poster_image', models.ImageField(upload_to='movie_posters/')),
                ('Backdrop_image', models.ImageField(upload_to='movie_backdrops/')),
                ('runtime', models.IntegerField()),
                ('trailer', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('genres', models.ManyToManyField(to='movies.genre')),
                ('languages', models.ManyToManyField(related_name='movies', to='movies.language')),
                ('subtitles', models.ManyToManyField(related_name='movies_subtitles', to='movies.language')),
                ('cast', models.ManyToManyField(related_name='acted_movies', to='movies.person')),
                ('director', models.ManyToManyField(related_name='directed_movies', to='movies.person')),
                ('streaming_platform', models.ManyToManyField(to='movies.platform')),
            ],
        ),
        migrations.CreateModel(
            name='WebShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('short_synopsis', models.TextField()),
                ('full_synopsis', models.TextField()),
                ('number_of_season', models.PositiveIntegerField()),
                ('poster_image', models.ImageField(upload_to='show_posters/')),
                ('backdrop_image', models.ImageField(upload_to='show_backdrops/')),
                ('is_active', models.BooleanField(default=True)),
                ('trailer', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed'), ('upcoming', 'Upcoming')], default='upcoming', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ManyToManyField(related_name='created_shows', to='movies.person')),
                ('genres', models.ManyToManyField(to='movies.genre')),
                ('languages', models.ManyToManyField(related_name='shows', to='movies.language')),
                ('streaming_platform', models.ManyToManyField(to='movies.platform')),
                ('subtitles', models.ManyToManyField(related_name='shows_subtitles', to='movies.language')),
            ],
        ),
        migrations.CreateModel(
            name='WebSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.PositiveIntegerField()),
                ('poster_image', models.ImageField(blank=True, null=True, upload_to='season_posters/')),
                ('description', models.TextField(blank=True, null=True)),
                ('total_episodes', models.IntegerField()),
                ('release_date', models.DateField()),
                ('webshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='movies.webshow')),
            ],
            options={
                'unique_together': {('webshow', 'season_number')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('review_text', models.TextField()),
                ('rating', models.IntegerField()),
                ('is_critic', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('release_date', models.DateField()),
                ('thumbnail_img', models.ImageField(upload_to='episode_thumbnails/')),
                ('runtime', models.IntegerField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movies.webseason')),
            ],
            options={
                'unique_together': {('season', 'episode_number')},
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('actor', 'Actor'), ('director', 'Director'), ('writer', 'Writer'), ('producer', 'Producer'), ('cinematographer', 'Cinematographer'), ('music_director', 'Music Director')], max_length=20)),
                ('character_name', models.CharField(blank=True, max_length=100, null=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person')),
                ('webshow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.webshow')),
            ],
            options={
                'unique_together': {('person', 'movie', 'webshow', 'role')},
            },
        ),
    ]
